# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $

# Read "InterViews/template" to understand how this Makefile was generated.
# Edit <InterViews/arch.def> to add support for a new platform.
# Edit <InterViews/iv-sgi.cf> to change platform-specific parameters.
# Edit <InterViews/local.def> to change site-specific parameters.
# Edit <himom/Imakefile> to change actions that make should perform.

# architecture:  SGI

CRT1 = /usr/lib/crt1.o
CRTN = /usr/lib/crtn.o

              SHELL = /bin/sh

              IMAKE = imake
         IMAKEFLAGS = \
		      -T "InterViews/template"\
		      -I$(CONFIGSRC) -I$(XCONFIGDIR)\
		      $(SPECIAL_IMAKEFLAGS)
 SPECIAL_IMAKEFLAGS =
             DEPEND = makedepend
     DEPEND_CCFLAGS = $(CCDEFINES) $(CCINCLUDES) -I/usr/include/CC
               MAKE = make
           PASSARCH = ARCH="$(ARCH)" SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS)"
          ARCHORCPU = $$CPU
               ARCH = $(ARCHORCPU)$(SPECIAL_ARCH)
       SPECIAL_ARCH =

           CCDRIVER = CC +p
           CCSUFFIX = c
                SRC = .
              SLASH = /
               SRCS = $(SRC)$(SLASH)*.$(CCSUFFIX)
               OBJS = *.o
               AOUT = a.out

            CCFLAGS = $(APP_CCFLAGS) $(IV_CCFLAGS) $(EXTRA_CCFLAGS)
         IV_CCFLAGS = \
		      \
		      \
		      $(SHARED_CCFLAGS)\
		      $(CCDEFINES)\
		      $(CCINCLUDES)
      DEBUG_CCFLAGS = -g
   OPTIMIZE_CCFLAGS = -O
     SHARED_CCFLAGS =
      EXTRA_CCFLAGS = -float -cckr

          CCDEFINES = $(APP_CCDEFINES) $(IV_CCDEFINES) $(EXTRA_CCDEFINES)
       IV_CCDEFINES = $(LANGUAGE_CCDEFINES) $(BACKWARD_CCDEFINES)
 LANGUAGE_CCDEFINES = -Dcplusplus_2_0
 BACKWARD_CCDEFINES =
    EXTRA_CCDEFINES = -DSYSV -Dsigned= -Dvolatile=

         CCINCLUDES = $(APP_CCINCLUDES) $(IV_CCINCLUDES) $(EXTRA_CCINCLUDES)
      IV_CCINCLUDES = \
		      $(BACKWARD_CCINCLUDES)\
		      $(TOP_CCINCLUDES)\
		      $(X_CCINCLUDES)
BACKWARD_CCINCLUDES =
     TOP_CCINCLUDES = -I$(INCSRC)
       X_CCINCLUDES =
   EXTRA_CCINCLUDES =

          CCLDFLAGS = $(APP_CCLDFLAGS) $(IV_CCLDFLAGS) $(EXTRA_CCLDFLAGS)
       IV_CCLDFLAGS = \
		      \
		      \
		      $(NONSHARED_CCLDFLAGS)
NONSHARED_CCLDFLAGS =
    EXTRA_CCLDFLAGS =

          CCDEPLIBS = $(APP_CCDEPLIBS) $(IV_CCDEPLIBS) $(EXTRA_CCDEPLIBS)
       IV_CCDEPLIBS = \
		      $(DEPLIBUNIDRAW)\
		      $(DEPLIBGRAPHIC)\
		      $(DEPLIBIV)\
		      $(DEPLIBXEXT)\
		      $(DEPLIBX11)\
		      $(DEPLIBM)
    EXTRA_CCDEPLIBS =

           CCLDLIBS = $(APP_CCLDLIBS) $(IV_CCLDLIBS) $(EXTRA_CCLDLIBS)
        IV_CCLDLIBS = \
		      $(LIBDIRPATH)\
		      $(LDLIBUNIDRAW)\
		      $(LDLIBGRAPHIC)\
		      $(LDLIBIV)\
		      $(XLIBDIRPATH)\
		      $(LDLIBXEXT)\
		      $(LDLIBX11)\
		      $(LDLIBM)\
		      $(ABSLIBDIRPATH)
     EXTRA_CCLDLIBS = -lC -lsun -lmalloc -lc_s

            INSTALL = $(SHELL) $(SCRIPTSRC)/bsdinst.sh
       INSTPGMFLAGS = -s
       INSTBINFLAGS = -m 0755
       INSTUIDFLAGS = -m 4755
       INSTLIBFLAGS = -m 0644
       INSTINCFLAGS = -m 0444
       INSTMANFLAGS = -m 0444
       INSTDATFLAGS = -m 0444
      INSTKMEMFLAGS = -m 2755 -g sys

                 AR = ar scq
                 AS = as
                 CP = cp
                CPP = /lib/cpp $(EXTRA_CCDEFINES)
      PREPROCESSCMD = $(CCDRIVER) -E $(EXTRA_CCDEFINES)
                 LD = ld
                 LN = ln -s
          MKDIRHIER = $(SHELL) $(SCRIPTSRC)/mkdirhier.sh
                 MV = mv
             RANLIB = ranlib
    RANLIBINSTFLAGS =
                 RM = rm -f
             RM_CMD = $(RM) ,* .emacs_* *..c *.BAK *.CKP *.a *.bak *.ln *.o a.out core errs make.log make.out tags TAGS
              TROFF = psroff

                TOP = ../../../.
        CURRENT_DIR = ./src/examples/himom

              IVSRC = $(TOP)/src
             BINSRC = $(IVSRC)/bin
          CONFIGSRC = $(IVSRC)/config
             INCSRC = $(IVSRC)/include
             LIBSRC = $(IVSRC)/lib
             MANSRC = $(IVSRC)/man
          SCRIPTSRC = $(BINSRC)/scripts

             BINDIR = $(TOP)/installed/bin/$(ARCH)
          CONFIGDIR = $(TOP)/installed/config
             INCDIR = $(TOP)/installed/include
             LIBDIR = $(TOP)/installed/lib/$(ARCH)
          LIBALLDIR = $(TOP)/installed/lib/all
             MANDIR = $(TOP)/installed/man

       ABSCONFIGDIR = /interviews/config
          ABSLIBDIR = /interviews/lib/$(ARCH)
       ABSLIBALLDIR = /interviews/lib/all
         XCONFIGDIR = /usr/lib/X11/config
            XINCDIR = /usr/include
            XLIBDIR = /usr/lib
          PSFONTDIR = /usr/lib/ps

all::

Makefile::
	-@if [ -f Makefile ]; then \
		$(RM) Makefile.bak; \
		$(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE) $(IMAKEFLAGS) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
Makefiles::
depend::
install::

clean::
	@$(RM_CMD) "#"*

# -------------------------------------------------------------------------

Makefiles::
	@echo "Making Makefiles" \
	"for $(ARCH) in $(CURRENT_DIR)/$(ARCH)"
	-@if [ ! -d $(ARCH) ]; then \
		mkdir $(ARCH); \
		chmod g+w $(ARCH); \
	fi; \
	if [ -f $(ARCH)/Makefile ]; then \
		$(RM) $(ARCH)/Makefile.bak; \
		$(MV) $(ARCH)/Makefile $(ARCH)/Makefile.bak; \
	fi; \
	$(IMAKE) $(IMAKEFLAGS) \
	-DTOPDIR=../$(TOP) -DCURDIR=$(CURRENT_DIR)/$(ARCH) \
	-DInObjectCodeDir -s $(ARCH)/Makefile

depend::
	-@for i in $(ARCH); \
	do \
		if [ -d $$i ]; then ( \
			echo "depending" \
			"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
			cd $$i; \
			$(MAKE) $(PASSARCH) depend; \
		) else continue; fi; \
	done

all::
	-@for i in $(ARCH); \
	do \
		if [ -d $$i ]; then ( \
			echo "making all" \
			"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
			cd $$i; \
			$(MAKE) $(PASSARCH) all; \
		) else continue; fi; \
	done

install::
	-@for i in $(ARCH); \
	do \
		if [ -d $$i ]; then ( \
			echo "installing" \
			"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
			cd $$i; \
			$(MAKE) $(PASSARCH) install; \
		) else continue; fi; \
	done

clean::
	-@for i in $(ARCH); \
	do \
		if [ -d $$i ]; then ( \
			echo "cleaning" \
			"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
			cd $$i; \
			$(MAKE) $(PASSARCH) clean; \
		) else continue; fi; \
	done

Makefiles.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	Makefiles
depend.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	depend
all.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	all
install.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	install
clean.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	clean

