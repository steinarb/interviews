/* base directory for software projects */
#define ProjectDir /proj

/* solaris workarounds */
#if defined(__svr4__)
#define SVR4 YES
#endif
#if defined(SVR4)
#define SVR4Architecture YES
#define HasGcc2 YES
#define HasGcc HasGcc2
#endif

/* gcc command line with -V for version and -O for optimize */
#define CCDriver g++	

#undef HasDynamicSharedLibraries
#define HasDynamicSharedLibraries YES

#undef SharedCCFlags
#define SharedCCFlags -fPIC

#undef SharedCCLdFlags
#define SharedCCLdFlags

/* 
 * build RPC classes -- requires iostreams & TCP sockets
 */
#undef BuildRPCClasses
#define BuildRPCClasses YES
#define SOMAXCONN 5

/* libg++ include directory -- usually does not change with new version of libg++ */
#define GPlusPlusIncludeDir /usr/local/lib/g++-include

/* link libraries for the above */
#undef ExtraCCLdLibs
#ifndef SVR4Architecture
#define ExtraCCLdLibs -Xlinker -Bstatic -lstdc++ -lm -Xlinker -Bdynamic -ldl -Xlinker -Bstatic
#else
#if 0  /* static linking of libstdc++ not necessarly needed */
#define ExtraCCLdLibs -Xlinker -Bstatic -lstdc++ -Xlinker -Bdynamic -lsocket -lnsl -lSM -lICE -lm
#else
#define ExtraCCLdLibs -lstdc++ -lsocket -lnsl -lSM -lICE -lm
#endif
#endif

/* statically or dynamically link libX11 */
#if HasDynamicSharedLibraries
#undef Ld_libX11
#ifndef SVR4Architecture
#define Ld_libX11 -Xlinker -Bstatic -lX11 -Xlinker -Bdynamic
#else
#if 0 /* static linking of X11 libraries not needed for recent versions of Solaris */
#define Ld_libX11 -Xlinker -Bstatic -lX11 -lSM -lICE -Xlinker -Bdynamic
#else
#define Ld_libX11 -lX11 -lSM -lICE
#endif
#endif
#endif

/* link libraries for TIFF */
#ifndef SVR4Architecture
#undef TIFFExtraCLdLibs
#define TIFFExtraCLdLibs -ldl
#else
#endif

/* Use native linker for shared libraries */
#undef LdCmd
#ifndef SVR4Architecture
#define LdCmd /bin/ld
#else
#define LdCmd /usr/ccs/bin/ld
#endif

/*
 * Install a shared library 
 */
#ifndef InstallDynamicSharedLibrary
#define InstallDynamicSharedLibrary(libname,rev,dest)                   @@\
install:: Concat(lib,libname.so.rev)                                    @@\
        MakeDir(dest)                                                   @@\
        $(INSTALL) -c $(INSTLIBFLAGS) Concat(lib,libname.so.rev) dest   @@\
        -@if [ -f dest/Concat(lib,libname.so) ]; then exit 0; else \    @@\
        cd dest; \                                                   	@@\
        $(LN) Concat(lib,libname.so.rev) Concat(lib,libname.so); fi	@@\
									@@\
uninstall::								@@\
	$(RM) dest/Concat(lib,libname.so.rev)				@@\
	$(RM) dest/Concat(lib,libname.so)
#endif

/* 
 * Enable/disable relative InterViews-style installation of binaries
 */
#undef InstallRelative
#define InstallRelative YES

#if 0 

/* -------------- imake way of configuring ------------------ */

/* 
 * Where to put binaries, libraries, and data files when InstallRelative is NO
 */ 
#define BinDir /usr/local/bin
#define LibDir /usr/local/lib
#define LibAllDir /usr/local/lib/ivtools

/*
 * X11 directories -- remember to override XCONFIGDIR the
 * first time you run "make World".
 */
#ifndef SVR4Architecture
#define XConfigDir /usr/local/lib/X11/config
#define XIncDir /usr/local/include
#define XLibDir /usr/local/lib
#else
#define XConfigDir /usr/X/lib/X11/config
#define XIncDir /usr/X/include
#define XLibDir /usr/X/lib
#endif

/* clippoly directory:  comment out if not available */
#define ClipPolyDir ProjectDir/clippoly

/* ACE directory: comment out if not available */
#define AceDir ProjectDir/ACE_wrappers

#else

/* --------------- autconf way of configuring --------------- */

/* file output by configure script */
#ifdef SVR4Architecture
#include "config-solaris-gcc.defs"
#else
#include "config-sunos4-gcc.defs"
#endif

#endif