# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.48 89/10/10 18:33:21 jim Exp $

#
# "IVImake.tmpl" - generic imake template customized for InterViews
#
# Change platform-specific parameters in the appropriate .cf files.
# Define local site-specific parameters in IVlocal.def.  You may
# need a full rebuild after changing some parameters.
#

# architecture:  MIPSEL

# platform:  $XConsortium: ultrix.cf,v 1.16 89/10/11 18:54:54 jim Exp $
# operating system:             Ultrix-32 3.0

#
# generic make variables
#

            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .
              SRC = .
              GEN = Generated
                M = MIPSEL
                X = X11

             AOUT = a.out
     AFTERINSTALL = $(RM)
               AR = ar cq
  BOOTSTRAPCFLAGS =
  BOOTSTRAPCPUCMD = /bin/sh $(SCRIPTSRC)/cpu.sh $(CONFIGSRC)
               CC = CC
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
           DEPEND = makedepend
     DEPENDCFLAGS = $(ALLDEFINES) -I/usr/include/CC
         GENCLASS = mkclass
            IMAKE = imake
        IMAKETMPL = "IVImake.tmpl"
        IMAKEOPTS = -T $(IMAKETMPL) -I$(CONFIGSRC) -I$(XCONFIGDIR)
          INSTALL = install
               LD = CC
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make X=$X $(MFLAGS)
        MKDIRHIER = /bin/sh $(SCRIPTSRC)/mkdirhier.sh
               MV = mv
               CP = cp
           RANLIB = ranlib
  RANLIBINSTFLAGS =
               RM = rm -f
             TAGS = ctags
            TROFF = psroff
     STD_INCLUDES =
  STD_CPP_DEFINES =
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =

     INSTPGMFLAGS = -s
     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0664
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

         INCLUDES = -I$(SRC) -I$(GEN) -I$(INCLUDESRC)/Std -I$(IVSRC)

      CDEBUGFLAGS = -O
       ALLDEFINES = $(STD_INCLUDES) $(INCLUDES) $(STD_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(ALLDEFINES) $(EXTRA_CFLAGS)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
          LDFLAGS = $(CDEBUGFLAGS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        IMAKE_CMD = $(IMAKE) $(IMAKEOPTS) $(EXTRA_IMAKEOPTS)
           RM_CMD = $(RM) .emacs_* *.CKP *.ln *.BAK *.bak *.a *.o *..c ,* *~ \
			a.out core errs tags TAGS make.log make.out

#
# project-specific make variables
#

        USRLIBDIR = $(TOP)/installed/lib/$$CPU
           BINDIR = $(TOP)/installed/bin/$$CPU.$X
      LOCALBINDIR = $(TOP)/installed/bin/$$CPU
           INCDIR = $(TOP)/installed/include
     TEMPLATESDIR = $(INCDIR)/Templates
        CONFIGDIR = $(TOP)/installed/config
       XCONFIGDIR = $(DESTDIR)/usr/lib/X11/config
          MANPATH = $(DESTDIR)/usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)n
        LIBMANDIR = $(MANSOURCEPATH)n
   RELATIVEMANDIR = $(TOP)/installed/man

            IVSRC = $(TOP)/src
        CONFIGSRC = $(IVSRC)/config
       INCLUDESRC = $(IVSRC)/InterViews
     TEMPLATESSRC = $(INCLUDESRC)/Templates
           BINSRC = $(IVSRC)/bin
         IMAKESRC = $(BINSRC)/imake
        SCRIPTSRC = $(BINSRC)/scripts
 LIBINTERVIEWSSRC = $(IVSRC)/libInterViews
    LIBGRAPHICSRC = $(IVSRC)/libgraphic
       LIBTEXTSRC = $(IVSRC)/libtext
           MANSRC = $(IVSRC)/man

        TEMPLATES = $(TEMPLATESSRC)
    LIBINTERVIEWS = $(LIBINTERVIEWSSRC)/$M/libInterViews$X.a
       LIBGRAPHIC = $(LIBGRAPHICSRC)/$M/libgraphic.a
          LIBTEXT = $(LIBTEXTSRC)/$M/libtext.a

#
# iv - root of the InterViews directory tree
#
# "make bootstrap" installs executables needed by "make World".
# "make World" builds InterViews for the first time.
# "make install" installs everything except the man pages.
# "make install.man" installs the man pages.
# "make format" formats the InterViews manual.
# "make print" formats and sends the InterViews manual to the printer.
# "make clean" removes the current platform's binaries and libraries.
#

WORLDOPTS	= -k
BOOTSTRAPCFLAGS	=
SUBDIRS		= src

all::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			cd $$i; \
			echo "making all" "in $(CURRENT_DIR)/$$i"; \
			$(MAKE) EXTRA_CFLAGS='$(EXTRA_CFLAGS)' all; \
		) else continue; fi; \
	done

depend::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			cd $$i; \
			echo "depending" "in $(CURRENT_DIR)/$$i"; \
			$(MAKE)  depend; \
		) else continue; fi; \
	done

install.man::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			cd $$i; \
			echo "installing man pages" "in $(CURRENT_DIR)/$$i"; \
			$(MAKE) DESTDIR='$(DESTDIR)' install.man; \
		) else continue; fi; \
	done

format::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			cd $$i; \
			echo "formatting" "in $(CURRENT_DIR)/$$i"; \
			$(MAKE)  format; \
		) else continue; fi; \
	done

print::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			cd $$i; \
			echo "printing" "in $(CURRENT_DIR)/$$i"; \
			$(MAKE)  print; \
		) else continue; fi; \
	done

#
# Bootstrap executables that must be installed before InterViews
# can be built.
#

bootstrap::
	@echo "##############################################################"
	@echo "Did you remember to check the configuration parameters in the"
	@echo "the directory src/config and set BOOTSTRAPCFLAGS if needed?"
	@echo "##############################################################"
	@echo ""
	@CPU=`$(BOOTSTRAPCPUCMD)` $(MAKE) createdirs

bootstrap::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			cd $$i; \
			echo "bootstrapping" "in $(CURRENT_DIR)/$$i"; \
			$(MAKE) BOOTSTRAPCFLAGS='$(BOOTSTRAPCFLAGS)' EXTRA_CFLAGS='$(EXTRA_CFLAGS)' DESTDIR='$(DESTDIR)' bootstrap; \
		) else continue; fi; \
	done

bootstrap::
	@echo ""
	@echo "##############################################################"
	@echo "Extend your PATH if necessary and put CPU in your environment"
	@echo "before continuing with the rest of the build process."
	@echo "##############################################################"

#
# Build InterViews for the first time.  Warning: clean removes
# make.log and make.out.
#

World::
	@echo ""
	@echo "Building InterViews 2.6"
	@echo ""
	@echo "##############################################################"
	@echo "Did you remember to extend your PATH to include imake et al"
	@echo "and put CPU in your environment?"
	@echo "##############################################################"
	@echo ""
	@date
	@echo ""
	@$(MAKE) Makefile
	@$(MAKE) Makefiles
	@$(MAKE) clean_maybe
	@$(MAKE) depend
	@$(MAKE) $(WORLDOPTS)
	@echo ""
	@date
	@echo ""
	@echo "Build of InterViews 2.6 complete."
	@echo ""

clean_maybe::

#
# Create the directories in which to install files if necessary.
#

install:: createdirs

createdirs::
	$(MKDIRHIER) $(USRLIBDIR) $(BINDIR) $(LOCALBINDIR)

#
# common rules for all Makefiles
#

clean::
	$(RM_CMD) \#*

Makefile::
	-@if [ -f Makefile ]; then \
		$(RM) Makefile.bak; \
		$(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

install::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			cd $$i; \
			echo "installing" "in $(CURRENT_DIR)/$$i"; \
			$(MAKE) DESTDIR='$(DESTDIR)' install; \
		) else continue; fi; \
	done

clean::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			cd $$i; \
			echo "cleaning" "in $(CURRENT_DIR)/$$i"; \
			$(MAKE) RM_CMD='$(RM_CMD)' clean; \
		) else continue; fi; \
	done

Makefiles::
	-@for i in $(SUBDIRS); \
	do \
		if [ -d $$i ]; then ( \
			echo "Making Makefiles in $(CURRENT_DIR)/$$i"; \
			if [ -f $$i/Makefile ]; then \
				$(RM) $$i/Makefile.bak; \
				$(MV) $$i/Makefile $$i/Makefile.bak; \
			fi; \
			$(IMAKE_CMD) -s $$i/Makefile -DTOPDIR=../$(TOP) \
			-DCURDIR=$(CURRENT_DIR)/$$i -f $$i/Imakefile; \
			cd $$i; \
			$(MAKE) Makefiles; \
		) else continue; fi; \
	done

#
# dependencies generated by makedepend
#

